#!/bin/sh

# Copyright 2018 Toyota Research Institute

# A function to add a new item (needle) to the passed environment variable, only
# if the new item is not already in the environment variable.  The function
# expects the elements of the environment variable to be separated via ':'.
add_if_not_in_var() {
  var=$1
  needle=$2

  # Get the current list of items in the variable using the "two-pass"
  # bash trick.  In the first pass (before the eval), $var (using the inner
  # dollar) is expanded to the name of the environment variable.  Then the
  # eval is run, and the outer dollar expands to the contents of the named
  # variable.  Note that we have to escape the outer one so it doesn't get
  # expanded by the first shell.
  current=$( eval echo \$"$var" )

  # Iterate over every item in the environment variable, looking to see
  # if the needle is already in there.  Note that we do it this way instead
  # of a substring because the substring can have some false positives (think
  # about the case where "foobar" is already there while trying to add
  # "foo").
  IFS_PREV_VAL=$IFS
  if [ -z ${IFS+x} ]; then
    IFS_WAS_SET=0
  else
    IFS_WAS_SET=1
  fi
  found=0
  for addr in $current; do
    if [ "$addr" = "$needle" ]; then
      found=1
      break
    fi
  done

  # If we didn't find the needle in the list, add it here.
  if [ "$found" -eq 0 ]; then
      if [ "$current" = "" ]; then
          export "$var"="$needle"
      else
          export "$var"="$( eval echo \$$var )":"$needle"
      fi
  fi

  if [ "$IFS_WAS_SET" -eq 0 ]; then
    unset IFS
  else
    IFS="$IFS_PREV_VAL"
  fi
}
add_if_not_in_var ASAN_OPTIONS $ASAN_OPTIONS:detect_odr_violation=0
