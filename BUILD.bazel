###############################################################################
# Loaders
###############################################################################

load("//:bazel/variables.bzl", "COPTS")


###############################################################################
# Libraries
###############################################################################

# TODO(stonier): dig into the cflags maliput sets in cmake/DefaultCFlags.cmake
# and verify they all work in a bazel environment. Be a little cautious and
# discerning - bazel packages are source packages, some of those flags
# may have ramifications for people on other platforms (e.g. -std=c++17
# immediately breaks if someone depends on maliput from windows) and/or
# compilers.

cc_library(
    name = "common",
    srcs = glob(["src/maliput/common/*.cc"]),
    hdrs = glob(["include/maliput/common/*.h"]),
    copts = COPTS,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
    ],
)

cc_library(
    name = "math",
    srcs = glob(["src/maliput/math/*.cc"]),
    hdrs = glob(["include/maliput/math/*.h"]),
    copts = COPTS,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        ":common",
    ],
)

cc_library(
    name = "api",
    srcs = glob(["src/maliput/api/**/*.cc"]),
    hdrs = glob(["include/maliput/api/**/*.h"]),
    copts = COPTS,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        ":common",
        ":math",
    ],
)

cc_library(
    name = "base",
    srcs = glob(["src/maliput/base/**/*.cc"]),
    hdrs = glob(["include/maliput/base/**/*.h"]),
    copts = COPTS,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        ":api",
        ":common",
        ":routing",
        "@yaml-cpp",
    ],
)

cc_library(
    name = "geometry_base",
    srcs = glob(["src/maliput/geometry_base/**/*.cc"]),
    hdrs = glob(["include/maliput/geometry_base/**/*.h"]),
    copts = COPTS,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        ":api",
    ],
)

cc_library(
    name = "routing",
    srcs = glob(["src/maliput/routing/**/*.cc"]),
    hdrs = glob(["include/maliput/routing/**/*.h"]),
    copts = COPTS,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        ":api",
        ":common",
        ":geometry_base"
    ],
)

cc_library(
    name = "utility",
    srcs = glob(["src/maliput/utility/**/*.cc"]),
    hdrs = glob(["include/maliput/utility/**/*.h"]),
    copts = COPTS,
    linkopts = ["-lstdc++fs"],
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        ":api",
        ":common",
        ":math",
    ],
)

cc_library(
    name = "plugin",
    srcs = glob(["src/maliput/plugin/**/*.cc"]),
    hdrs = glob(["include/maliput/plugin/**/*.h"]),
    copts = COPTS,
    linkopts = ['-ldl'],
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        ":api",
        ":common",
        ":utility",
    ],
)

# TODO(stonier): prune, simplify and merge into common/math
cc_library(
    name = "drake_private_common",
    srcs = glob(["src/maliput/drake/common/**/*.cc"]),
    hdrs = glob(["src/maliput/drake/common/**/*.h"]),
    copts = COPTS,
    strip_include_prefix = "src",
    visibility = ["//visibility:private"],
    deps = [
        "@eigen",
    ],
)

cc_library(
    name = "drake_private_systems",
    srcs = glob(["src/maliput/drake/systems/**/*.cc"]),
    hdrs = glob(["src/maliput/drake/systems/**/*.h"]),
    copts = COPTS,
    strip_include_prefix = "src",
    visibility = ["//visibility:private"],
    deps = [
        "@eigen",
        ":drake_private_common",
    ],
)

cc_library(
    name = "drake",
    srcs = glob(["src/maliput/drake/*.cc"]),
    hdrs = glob(["include/maliput/drake/*.h"]),
    copts = COPTS,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        "@eigen",
        ":common",
        ":drake_private_common",
        ":drake_private_systems",
        ":math",
    ],
)

cc_library(
    name = "test_utilities",
    srcs = glob(["src/maliput/test_utilities/**/*.cc"]),
    hdrs = glob(["include/maliput/test_utilities/**/*.h"]),
    copts = COPTS,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [
        ":api",
        ":common",
        ":geometry_base",
        ":math",
    ],
)
